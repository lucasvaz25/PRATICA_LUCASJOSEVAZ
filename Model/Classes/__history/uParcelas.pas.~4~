unit uParcelas;

interface

uses
  UGeral,
  UFormasPagamentos;

type
  TParcelas = class( TGeral )
  private
    FFormaPagamento: TFormasPagamentos;
    FNumero: Integer;
    FDias: Integer;
    FPorcentagem: Real;
    procedure SetDias( const Value: Integer );
    procedure SetFormaPagamento( const Value: TFormasPagamentos );
    procedure SetNumero( const Value: Integer );
    procedure SetPorcentagem( const Value: Real );
  public
    constructor Create;
    destructor Destroy;
    procedure Free;

    property Numero: Integer read FNumero write SetNumero;
    property Dias: Integer read FDias write SetDias;
    property Porcentagem: Real read FPorcentagem write SetPorcentagem;
    property FormaPagamento: TFormasPagamentos read FFormaPagamento write SetFormaPagamento;

    procedure CopiarDados( Value: TParcelas );

  end;

implementation

{ TParcelas }

procedure TParcelas.CopiarDados( Value: TParcelas );
begin
  inherited CopiarDados( Value );
  Fnumero      := Value.Numero;
  Fdias        := Value.Dias;
  FPorcentagem := Value.Porcentagem;

  FFormaPagamento.CopiarDados( Value.FormaPagamento );
end;

constructor TParcelas.Create;
begin
  inherited Create;
  Fnumero         := 0;
  Fdias           := 0;
  FPorcentagem    := 0;
  FFormaPagamento := TFormasPagamentos.Create;
end;

destructor TParcelas.Destroy;
begin

end;

procedure TParcelas.Free;
begin

end;

procedure TParcelas.SetDias( const Value: Integer );
begin
  FDias := Value;
end;

procedure TParcelas.SetFormaPagamento( const Value: TFormasPagamentos );
begin
  FFormaPagamento := Value;
end;

procedure TParcelas.SetNumero( const Value: Integer );
begin
  FNumero := Value;
end;

procedure TParcelas.SetPorcentagem( const Value: Real );
begin
  FPorcentagem := Value;
end;

end.
