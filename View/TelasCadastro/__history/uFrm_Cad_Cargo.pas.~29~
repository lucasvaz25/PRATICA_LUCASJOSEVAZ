unit uFrm_Cad_Cargo;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Contnrs,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  UFrm_Cadastro,
  Vcl.Imaging.Pngimage,
  Vcl.ExtCtrls,
  Vcl.DBCtrls,
  Vcl.Buttons,
  Vcl.StdCtrls,
  VazEdit,
  UDepartamentosController,
  UCargosController;

type
  TFrm_Cad_Cargo = class( TFrm_Cadastro )
    LblCargo: TLabel;
    EdCargo: TVazEdit;
    LblDepartamento: TLabel;
    EdDepartamento: TVazEdit;
    EdCodDept: TVazEdit;
    LblCodDept: TLabel;
    PnlPesquisar: TPanel;
    ImgPesquisar: TImage;
    BtnPesquisar: TSpeedButton;
    procedure BtnPesquisarClick( Sender: TObject );
    procedure EdCodDeptKeyPress( Sender: TObject; var Key: Char );
    procedure EdCodDeptExit( Sender: TObject );
    procedure FormCreate( Sender: TObject );
    procedure FormShow( Sender: TObject );
  private
    { Private declarations }
    procedure PopulaObj;
    procedure PopulaForm;
    function ValidaForm: Boolean;
    procedure ConsultaDept;
    procedure PesquisaDept;
  public
    { Public declarations }
    DeptControl: TDepartamentosController;
    CargoControl: TCargosController;

    procedure Salvar; override;
    procedure Sair; override;
  end;

var
  Frm_Cad_Cargo: TFrm_Cad_Cargo;

implementation

uses
  UFilterSearch,
  UFrm_Consulta_Departamentos,
  UDepartamentos;
{$R *.dfm}

{ TFrm_Cad_Cargo }

procedure TFrm_Cad_Cargo.BtnPesquisarClick( Sender: TObject );
begin
  inherited;
  Self.PesquisaDept;
end;

procedure TFrm_Cad_Cargo.ConsultaDept;
var
  Filtro: TFilterSearch;
  List: TObjectlist;
begin
  if EdCodDept.Text <> '' then
  begin
    Filtro := TFilterSearch.Create;
    try
      Filtro.TipoConsulta := TpCCodigo;
      Filtro.Codigo       := StrToInt( EdCodDept.Text );
      List                := DeptControl.Consulta( Filtro );
      if List.Count > 0 then
        EdDepartamento.Text := TDepartamentos( List[ 0 ] ).Departamento
      else
      begin
        ShowMessage( 'Departamento não encontrado!!' );
        EdCodDept.Clear;
        EdDepartamento.SetFocus;
      end;
    finally
      Filtro.Free;
    end;
  end;
end;

procedure TFrm_Cad_Cargo.EdCodDeptExit( Sender: TObject );
begin
  inherited;
  Self.ConsultaDept;
end;

procedure TFrm_Cad_Cargo.EdCodDeptKeyPress( Sender: TObject; var Key: Char );
begin
  inherited;
  if Key = #13 then
    Self.ConsultaDept;
end;

procedure TFrm_Cad_Cargo.FormCreate( Sender: TObject );
begin
  inherited;
  CargoControl := nil;
  CargoControl.GetInstance( CargoControl, Self );

  DeptControl := nil;
  DeptControl.GetInstance( DeptControl, Self );
end;

procedure TFrm_Cad_Cargo.FormShow( Sender: TObject );
begin
  inherited;
  if not( EdCodigo.Text = '0' ) then
    PopulaForm;
end;

procedure TFrm_Cad_Cargo.PesquisaDept;
var
  Frm: TFrm_Consulta_Departamentos;
begin
  inherited;
  Frm := TFrm_Consulta_Departamentos.Create( Self );
  try
    Frm.IsSelecionar := True;
    Frm.ShowModal;
    EdDepartamento.Text := Frm.DeptControl.GetEntity.Departamento;
    EdCodDept.Text      := IntToStr( Frm.DeptControl.GetEntity.Codigo );
    CargoControl.GetEntity.Departamento.CopiarDados( Frm.DeptControl.GetEntity );
  finally
    Frm.Release;
  end;
end;

procedure TFrm_Cad_Cargo.PopulaForm;
begin

end;

procedure TFrm_Cad_Cargo.PopulaObj;
begin
  with CargoControl.GetEntity do
  begin
    Codigo  := StrToInt( EdCodigo.Text );
    Cargo   := UpperCase( EdCargo.Text );
    DataCad := Date;
    UserCad := UpperCase( 'lucas' );
  end;
end;

procedure TFrm_Cad_Cargo.Sair;
begin
  inherited;

end;

procedure TFrm_Cad_Cargo.Salvar;
begin
  inherited;

end;

function TFrm_Cad_Cargo.ValidaForm: Boolean;
begin

end;

end.
